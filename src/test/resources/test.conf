input {
    loghub.receivers.ZMQ {
        listen: "tcp://localhost:2120",
        decoder: loghub.decoders.SerializedObject
    }
} | $main
output $oneref | { loghub.senders.ElasticSearch }

pipeline[oneref] { loghub.processors.Geoip2 { types: ["country"], threads:4 } }
// The main pipe
pipeline[main] {
    log("event",DEBUG)
    | [logger_name] == "jrds.starter.Timer" || event.info > 4 ? log("event.info", INFO) : ( loghub.processors.Identity | loghub.processors.Identity)
    | $oneref
    + $forked
    | [bla]-
    | [bla] < [nobla]
    | [nobla] = [bla] + 2
    | [found] = [name] =~ /some/
    | [sub value] = 3
    | loghub.processors.Identity { if: [value] != "some", success: ([b] = 1 | [c] = 2), failure: [d] = 3}
    | [date] = "${@timestamp%ta} ${@timestamp%tb} ${@timestamp%td} ${@timestamp%tT} ${@timestamp%tZ} ${@timestamp%tY}"
    | (java.lang.Integer) [count]
    | [endfield] @ [field] {
        "a": 1,
        "b": 2,
    }
    | fire | $main { [a] = 1 ; [b] = [bla] * 3 }
    | drop
}
pipeline [empty] { }
pipeline [groovy] { loghub.processors.Groovy { script: "println event['logger_name']" } }
pipeline [forked] { loghub.processors.Identity }
logfile: "machin"
plugins: ["/etc", "/c"]
jmx.protocol: "jmxmp"
/****
 * a multi lines comment
 ****/
